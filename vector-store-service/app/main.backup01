from fastapi import FastAPI, Request
from app.utils.pg import store_vector, search_vectors

app = FastAPI(title="Vector Store Service")

@app.post("/store")
async def store(data: dict):
    """
    Accepts a document embedding and metadata, and stores it in the vector DB.
    Expects:
    {
        "text": "...",
        "embedding": [...],
        "source": "...",  # optional
        "doc_id": "abc123"  # optional
    }
    """
    await store_vector(data)
    return {"status": "stored"}

@app.post("/search")
async def search(req: Request):
    """
    Accepts a query embedding and returns top-k similar documents.
    Expects:
    {
        "embedding": [...],
        "top_k": 10
    }
    """
    body = await req.json()
    results = await search_vectors(body["embedding"], body.get("top_k", 10))
    return {"results": results}

@app.get("/health")
def health_check():
    return {"status": "ok", "service": "vector-store"}
